<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" creationComplete="group1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.redrum.flex.util.Rcp;
			import com.redrum.flex.util.Util;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.rpc.AsyncToken;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			import mx.rpc.remoting.RemoteObject;
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				checkUpdate();
			}
			var so:SharedObject = SharedObject.getLocal("/");
			var count = 0;
			
			function checkUpdate(){
				var chatService:RemoteObject = Rcp.getService("chatService");
				var token:AsyncToken = chatService.queryModuleInfos();
				if(null == so.data.modules){
					so.data.modules = {};
				}
				token.addResponder(new mx.rpc.Responder(function(e:ResultEvent){
					var arr:ArrayCollection = ArrayCollection(e.result);
					for(var i=0; i<arr.length; i++){
						var m = arr.getItemAt(i);
						if(so.data.modules[m.name] == null || m.version != so.data.modules[m.name].version){
							trace('更新' + m.name);
							so.data.modules[m.name] = m;
							var request:URLRequest = new URLRequest(Rcp.server_domain + "flex/modules/" + m.path);
							var stream:URLStream = new URLStream;
							stream.load(request);
							stream.addEventListener(ProgressEvent.PROGRESS, function(e2:ProgressEvent){
								var info:URLStream=e2.target as URLStream;
								trace("" + Math.round(100 * e2.bytesLoaded / e2.bytesTotal));
							});
							count++;
							stream.addEventListener(Event.COMPLETE, function(e2:Event){
								var f:File = new File(File.applicationDirectory.nativePath + "/" + m.path);
								var fs:FileStream = new FileStream;
								fs.open(f, FileMode.WRITE);
								var br:ByteArray = new ByteArray;
								stream.readBytes(br);
								br.position = 0;
								fs.writeBytes(br);
								fs.close();
								count--;
								if(count<=0){
									Util.application.dispatchEvent(new Event("updated"));
								}
							});
						}
					}
					if(count<=0){
						Util.application.dispatchEvent(new Event("updated"));
					}
				}, Util.fail));
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:layout>
		<s:VerticalLayout horizontalAlign="center" paddingTop="200"/>
	</s:layout>
	<s:Label width="100%" fontSize="34" text="正在下载更新" textAlign="center"/>
</s:Group>
