<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300" creationComplete="group1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.redrum.flex.util.Rcp;
			
			import mx.collections.ArrayCollection;
			import mx.controls.TextArea;
			import mx.events.FlexEvent;
			import mx.messaging.Consumer;
			import mx.messaging.events.MessageEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				
				Main.application.addEventListener("rpc_init", function(){
//					var timer:Timer = new Timer(4000);
//					timer.addEventListener(TimerEvent.TIMER, function(){
//						if(!Rcp._init)
//							return;
//						var chatService = Rcp.getService("chatService");
//						chatService.queryNew(from.text);
//						chatService.addEventListener(ResultEvent.RESULT, receive);
//					});
//					timer.start();
					
					var consumer:Consumer = new Consumer;
					consumer.destination = "chat_dest";
					consumer.channelSet = Rcp.cs;
					consumer.addEventListener(MessageEvent.MESSAGE, receive);
					consumer.subscribe();
				})
			}
			
			function receive(e:ResultEvent){
				var arr:ArrayCollection = ArrayCollection(e.result);
				if(null == arr)
					return;
				for(var i=0; i<arr.length; i++){
					content.text += to.text + ":\n    " +arr.getItemAt(i).message + "\n";
				}
				content.scroller.verticalScrollBar.value = content﻿.scroller.verticalScrollBar.maxHeight; 
				if(arr.length > 0){
					Rcp.window.notifyUser(NotificationType.CRITICAL);
				}
			}
			
			protected function btn_send_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var chatService:RemoteObject = Rcp.getService("chatService");
				chatService.send(from.text, to.text, sendMsg.text);
				chatService.addEventListener(ResultEvent.RESULT, succ);
				chatService.addEventListener(FaultEvent.FAULT, fault);
				content.text += from.text + ":" + "\n    " + sendMsg.text + "\n";
				sendMsg.text = "";
				content.scroller.verticalScrollBar.value = content﻿.scroller.verticalScrollBar.maxHeight; 
			}
			
			function succ(e){
				trace(e);
			}
			function fault(e){
				trace(e);
			}
			
			protected function sendMsg_keyDownHandler(event:KeyboardEvent):void
			{
				// TODO Auto-generated method stub
				
				if(event.keyCode == 13 && event.ctrlKey){
					btn_send_clickHandler(null);
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:VGroup width="100%" height="100%">
		<s:HGroup width="100%" height="50">
			<s:Label text="你的名字:"/>
			<s:TextInput id="from"/>
			<s:Label text="对方名字:"/>
			<s:TextInput id="to"/>
		</s:HGroup>
		<s:TextArea id="content" width="100%" editable="false" height="100%"/>
		<s:HGroup width="100%" height="50">
			<s:TextArea id="sendMsg" width="80%" height="100%" keyDown="sendMsg_keyDownHandler(event)"/>
			<s:Button id="btn_send" label="发送" click="btn_send_clickHandler(event)"/>
		</s:HGroup>
	</s:VGroup>
</s:Group>
